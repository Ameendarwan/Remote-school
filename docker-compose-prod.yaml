version: '3'
services:
  # organization:
  #   build:
  #     context: .
  #     dockerfile: ./apps/organization/Dockerfile
  #     target: development
  #   command: pnpm run start:dev organization
  #   env_file:
  #     - ./apps/organization/.env
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   restart: unless-stopped
  #   network_mode: app-network
  #   depends_on:
  #     - takmildb

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    network_mode: app-network
    depends_on:
      - takmildb
  school:
    build:
      context: .
      dockerfile: ./apps/school/Dockerfile
      target: development
    command: pnpm run start:dev school
    env_file:
      - ./apps/school/.env
    ports:
      - '3003:3003'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    network_mode: app-network
    depends_on:
      - takmildb

  takmildb:
    container_name: takmildb
    hostname: takmil-db
    image: mongo
    ports:
      - '27017:27017'
    restart: always
    networks:
      - app-network
    volumes:
      - dbdata:/data/db
    # command: mongod --bind_ip_all --replSet rs0

  # mongo2:
  #   container_name: mongo2
  #   hostname: mongo2
  #   image: mongo
  #   ports:
  #     - 30002:27017
  #   networks:
  #     - app-network
  #   restart: always
  #   volumes:
  #     - dbdata2:/data/db
  #   command: mongod --bind_ip_all --replSet rs0

  # mongo3:
  #   container_name: mongo3
  #   hostname: mongo3
  #   image: mongo
  #   ports:
  #     - 30003:27017
  #   networks:
  #     - app-network
  #   restart: always
  #   volumes:
  #     - dbdata3:/data/db
  #   command: mongod --bind_ip_all --replSet rs0

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  dbdata:
  # dbdata2:
  # dbdata3:
